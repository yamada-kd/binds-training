#!/usr/bin/env python
# coding: utf-8

# # 演習問題

# ## プログラミングの基礎
# 
# 

# 「プログラミングの基礎」で触れた事柄に関する問題集です．

# ```{hint}
# 講義資料に載っていない事柄に関する問題がたくさんありますが，現実世界でプログラミングはそういう課題に取り組むことではじめて実力がつきます．
# ```

# ### 1-1 ほげ

# 

# In[ ]:


#!/usr/bin/env python3

def main():
    # ここにプログラムを書く．

if __name__ == "__main__":
    main()


# ### 1-2 行列の掛け算

# 以下の行列の掛け算を NumPy 等のライブラリを用いずに行ってください．
# 
# $
#   \left[
#     \begin{array}{ccc}
#       1 & 2 & 3 \\
#       3 & 4 & 5\\
#     \end{array}
#   \right]
#   \times
#   \left[
#     \begin{array}{cc}
#       5 & 6 \\
#       6 & 7 \\
#       7 & 8 \\
#     \end{array}
#   \right]
# $

# ```{note}
# 行列の掛け算なんてライブラリ使わずにやることなんてないからなんて不毛な問題なんだ，と思うかもしれないのですが，プログラミング初心者がこれをできるようになるということは `for` の使い方と動き方をしっかり理解していることの確認となり，その観点からは有意義です．
# ```

# In[ ]:


#!/usr/bin/env python3

def main():
    # ここにプログラムを書く．

if __name__ == "__main__":
    main()


# ## scikit-learn を利用した機械学習
# 
# 

# 「scikit-learn を利用した機械学習」で触れた事柄に関する問題集です．

# ### 2-1 ほげ

# 

# In[ ]:





# ### 2-2 ほげ

# 

# In[ ]:





# ### 2-3 ほげ

# 

# In[ ]:





# ## 深層学習
# 
# 

# 「深層学習」で触れた事柄に関する問題集です．

# ### 3-1 ほげ

# 

# In[ ]:





# ### 3-2 ほげ

# 

# In[ ]:





# ### 3-3 ほげ

# 

# In[ ]:





# ### 3-4 ほげ

# 

# In[ ]:





# ### 3-5 ほげ

# 

# In[ ]:





# ```{note}
# 終わりです．
# ```
